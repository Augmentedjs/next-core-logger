{"version":3,"sources":["webpack://next-core-logger/webpack/universalModuleDefinition","webpack://next-core-logger/webpack/bootstrap","webpack://next-core-logger/./src/level.js","webpack://next-core-logger/./src/abstractLogger.js","webpack://next-core-logger/./src/consoleLogger.js","webpack://next-core-logger/./src/colorConsoleLogger.js","webpack://next-core-logger/./src/basicLogger.js","webpack://next-core-logger/./src/type.js","webpack://next-core-logger/./src/index.js","webpack://next-core-logger/./src/iconLogger.js","webpack://next-core-logger/./src/loggerFactory.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Level","INFO","DEBUG","ERROR","WARN","constructor","loggerLevel","label","TIME_SEPERATOR","DATE_SEPERATOR","OPEN_GROUP","CLOSE_GROUP","_getLogTime","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","padEnd","log","message","_logMe","info","error","debug","warn","level","ConsoleLogger","AbstractLogger","super","console","ColorConsoleLogger","BasicLogger","Type","CONSOLE","COLOR_CONSOLE","BASIC","LoggerFactory","IconLogger","type"],"mappings":"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","file":"next-core-logger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"next-core-logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"next-core-logger\"] = factory();\n\telse\n\t\troot[\"next-core-logger\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/**\n * Logger Level\n * @name Level\n * @enum {Symbol}\n * @property {Symbol} INFO The Info level\n * @property {Symbol} DEBUG The debug level\n * @property {Symbol} ERROR The error level\n * @property {Symbol} WARN The warning level\n */\nconst Level = {};\nLevel.INFO = Symbol(\"info\");\nLevel.DEBUG = Symbol(\"debug\");\nLevel.ERROR = Symbol(\"error\");\nLevel.WARN = Symbol(\"warn\");\n\nexport default Level;\n","import Level from \"./level.js\";\n\n/**\n * Augmented Abstract Logger\n * @param {Level} l The level to initialize the logger with\n * @abstract\n */\nclass AbstractLogger {\n  constructor(l) {\n    this.loggerLevel = (l) ? l : Level.INFO;\n    this.label = Level;\n    this.TIME_SEPERATOR = \":\";\n    this.DATE_SEPERATOR = \"-\";\n    this.OPEN_GROUP = \" [ \";\n    this.CLOSE_GROUP = \" ] \";\n  };\n\n  _getLogTime() {\n    const now = new Date();\n    const s = `${now.getFullYear()}${this.DATE_SEPERATOR}${(now.getMonth() + 1)}${this.DATE_SEPERATOR}${now.getDate()} ${now.getHours()}${this.TIME_SEPERATOR}${now.getMinutes()}${this.TIME_SEPERATOR}${now.getSeconds()}${this.TIME_SEPERATOR}${now.getMilliseconds()}`;\n    return s.padEnd(23, \" \");\n  };\n\n  /**\n   * log a message with default level\n   * @param {string} message The message to log\n   * @param {Logger.Level} level The level of the log message\n   * @returns {Any} The message\n   */\n  log(...message) {\n    return this._logMe(Level.INFO, `${this._getLogTime()}${this.OPEN_GROUP}INFO ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Logs a message in info level\n   * @param {Any} message\n   */\n  info(...message) {\n    return this._logMe(Level.INFO, `${this._getLogTime()}${this.OPEN_GROUP}INFO ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in error level\n   * @param {Any} message\n   */\n  error(...message) {\n    return this._logMe(Level.ERROR, `${this._getLogTime()}${this.OPEN_GROUP}ERROR${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in debug level\n   * @param {Any} message\n   */\n  debug(...message) {\n    return this._logMe(Level.DEBUG, `${this._getLogTime()}${this.OPEN_GROUP}DEBUG${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in warn level\n   * @param {Any} message\n   */\n  warn(...message) {\n    return this._logMe(Level.WARN, `${this._getLogTime()}${this.OPEN_GROUP}WARN ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * logMe method - the actual logger method that logs.  Each instance will have it's own<br/>\n   * override this in an instance\n   * @example _logMe(message, level) { ... };\n   * @method _logMe\n   * @param {string} level The level to log to\n   * @param {Any} message The message(s) to log\n   * @returns {string} The message\n   */\n   _logMe(level, ...message) {};\n};\n\nexport default AbstractLogger;\n","import AbstractLogger from \"./abstractLogger.js\";\nimport Level from \"./level.js\";\n\n/**\n * Console Logger\n * @param {Level} l The level to initialize the logger with\n * @extends AbstractLogger\n */\nclass ConsoleLogger extends AbstractLogger {\n  constructor(l) {\n    super(l);\n  };\n  _logMe(level, ...message) {\n    if (level === Level.INFO) {\n      console.info(...message);\n    } else if (level === Level.ERROR) {\n      console.error(...message);\n    } else if (level === Level.DEBUG) {\n      console.debug(...message);\n    } else if (level === Level.WARN) {\n      console.warn(...message);\n    } else {\n      console.log(...message);\n    }\n    return message;\n  };\n};\n\nexport default ConsoleLogger;\n","import AbstractLogger from \"./abstractLogger.js\";\nimport Level from \"./level.js\";\n\n/**\n * Color Console Logger\n * @param {Level} l The level to initialize the logger with\n * @memberof Logger\n * @extends AbstractLogger\n */\nclass ColorConsoleLogger extends AbstractLogger {\n  constructor(l) {\n    super(l);\n  };\n  _logMe(level, ...message) {\n    if (level === Level.INFO) {\n      console.info(\"\\x1b[36m\", ...message, \"\\x1b[0m\");\n    } else if (level === Level.ERROR) {\n      console.error(\"\\x1b[31m\", ...message, \"\\x1b[0m\");\n    } else if (level === Level.DEBUG) {\n      console.debug(\"\\x1b[34m\", ...message, \"\\x1b[0m\");\n    } else if (level === Level.WARN) {\n      console.warn(\"\\x1b[33m\", ...message, \"\\x1b[0m\");\n    } else {\n      console.log(\"\\x1b[37m\", ...message, \"\\x1b[0m\");\n    }\n  };\n};\n\nexport default ColorConsoleLogger;\n","import Level from \"./level.js\";\nimport ConsoleLogger from \"./consoleLogger.js\";\n\n/**\n * Basic Console Logger (level off extra text)\n * @param {Level} l The level to initialize the logger with\n * @memberof Logger\n * @extends ConsoleLogger\n */\nclass BasicLogger extends  ConsoleLogger {\n  constructor(l) {\n    super(l);\n    this.loggerLevel = (l) ? l : Level.INFO;\n    this.label = Level;\n    this.TIME_SEPERATOR = \":\";\n    this.DATE_SEPERATOR = \"-\";\n    this.OPEN_GROUP = \" [ \";\n    this.CLOSE_GROUP = \" ] \";\n  };\n\n  /**\n   * log a message with default level\n   * @param {string} message The message to log\n   * @param {Logger.Level} level The level of the log message\n   * @returns {Any} The message\n   */\n  log(...message) {\n    return this.info(...message);\n  };\n\n  /**\n   * Logs a message in info level\n   * @param {Any} message\n   */\n  info(...message) {\n    return this._logMe(Level.INFO, `${this.OPEN_GROUP}INFO  ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in error level\n   * @param {Any} message\n   */\n  error(...message) {\n    return this._logMe(Level.ERROR, `${this.OPEN_GROUP}ERROR ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in debug level\n   * @param {Any} message\n   */\n  debug(...message) {\n    return this._logMe(Level.DEBUG, `${this.OPEN_GROUP}DEBUG ${this.CLOSE_GROUP}`, ...message);\n  };\n\n  /**\n   * Log a message in warn level\n   * @param {Any} message\n   */\n  warn(...message) {\n    return this._logMe(Level.WARN, `${this.OPEN_GROUP}WARN  ${this.CLOSE_GROUP}`, ...message);\n  };\n};\n\nexport default BasicLogger;\n","/**\n * Logger Type\n * @name Type\n * @enum {Symbol}\n * @property {Symbol} CONSOLE The console logger (terminal)\n * @property {Symbol} COLOR_CONSOLE The color console logger (terminal)\n @property {Symbol} BASIC The basic console logger (terminal)\n */\nconst Type = {};\nType.CONSOLE = Symbol(\"console\");\nType.COLOR_CONSOLE = Symbol(\"colorConsole\");\nType.BASIC = Symbol(\"basic\");\n\nexport default Type;\n","import AbstractLogger from \"./abstractLogger.js\";\nimport ConsoleLogger from \"./consoleLogger.js\";\nimport ColorConsoleLogger from \"./colorConsoleLogger.js\";\nimport BasicLogger from \"./basicLogger.js\";\nimport IconLogger from \"./iconLogger.js\";\nimport LoggerFactory from \"./loggerFactory.js\";\nimport Type from \"./type.js\";\nimport Level from \"./level.js\";\n\nmodule.exports.AbstractLogger = AbstractLogger;\nmodule.exports.ConsoleLogger = ConsoleLogger;\nmodule.exports.ColorConsoleLogger = ColorConsoleLogger;\nmodule.exports.LoggerFactory = LoggerFactory;\nmodule.exports.BasicLogger = BasicLogger;\nmodule.exports.IconLogger = IconLogger;\nmodule.exports.Type = Type;\nmodule.exports.Level = Level;\n","import ColorConsoleLogger from \"./colorConsoleLogger.js\";\nimport Level from \"./level.js\";\n\n/**\n * Color Icon Console Logger\n * @param {Level} l The level to initialize the logger with\n * @extends ColorConsoleLogger\n */\nclass IconLogger extends ColorConsoleLogger {\n  constructor(l) {\n    super(l);\n    this.loggerLevel = (l) ? l : Level.INFO;\n    this.label = Level;\n    this.TIME_SEPERATOR = \":\";\n    this.DATE_SEPERATOR = \"-\";\n    this.OPEN_GROUP = \" [ \";\n    this.CLOSE_GROUP = \" ] \";\n  };\n\n  _getLogTime() {\n    const now = new Date();\n    const s = `${now.getFullYear()}${this.DATE_SEPERATOR}${(now.getMonth() + 1)}${this.DATE_SEPERATOR}${now.getDate()} ${now.getHours()}${this.TIME_SEPERATOR}${now.getMinutes()}${this.TIME_SEPERATOR}${now.getSeconds()}${this.TIME_SEPERATOR}${now.getMilliseconds()}`;\n    return s.padEnd(23, \" \");\n  };\n\n  /**\n   * log a message with default level\n   * @param {string} message The message to log\n   * @param {Logger.Level} level The level of the log message\n   * @returns {Any} The message\n   */\n  log(...message) {\n    return this.info(...message);\n  };\n\n  /**\n   * Logs a message in info level\n   * @param {Any} message\n   */\n  info(...message) {\n    return this._logMe(Level.INFO, `${this._getLogTime()} ⓘ `, ...message);\n  };\n\n  /**\n   * Log a message in error level\n   * @param {Any} message\n   */\n  error(...message) {\n    return this._logMe(Level.ERROR, `${this._getLogTime()} ⓔ `, ...message);\n  };\n\n  /**\n   * Log a message in debug level\n   * @param {Any} message\n   */\n  debug(...message) {\n    return this._logMe(Level.DEBUG, `${this._getLogTime()} ⓓ `, ...message);\n  };\n\n  /**\n   * Log a message in warn level\n   * @param {Any} message\n   */\n  warn(...message) {\n    return this._logMe(Level.WARN, `${this._getLogTime()} ⓦ `, ...message);\n  };\n};\n\nmodule.exports = IconLogger;\n","import ConsoleLogger from \"./consoleLogger.js\";\nimport ColorConsoleLogger from \"./colorConsoleLogger.js\";\nimport BasicLogger from \"./basicLogger.js\";\nimport Type from \"./type.js\";\n\n/**\n * A logger factory for creating a logger instance\n */\nclass LoggerFactory {\n  constructor() {\n  };\n  /**\n   * getLogger - get an instance of a logger\n   * @param {Type} type Type of logger instance\n   * @param {Level} level Level to set the logger to\n   * @returns {AbstractLogger} logger Instance of a logger by istance type\n   * @example LoggerFactory.getLogger(Type.CONSOLE, Level.DEBUG);\n   */\n  static getLogger(type, level) {\n    if (type === Type.CONSOLE) {\n      return new ConsoleLogger(level);\n    } else if (type === Type.COLOR_CONSOLE) {\n      return new ColorConsoleLogger(level);\n    } else if (type === Type.BASIC) {\n      return new BasicLogger(level);\n    }\n  };\n};\n\nexport default LoggerFactory;\n"],"sourceRoot":""}